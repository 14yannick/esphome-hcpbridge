esphome:
  name: hcpbridge
  libraries:
    - emelianov/modbus-esp8266
  platformio_options:
    board_build.f_cpu: 240000000L
    board_build.flash_mode: qio
    monitor_speed: 9600
    monitor_filters: esp32_exception_decoder
    lib_ldf_mode: deep+
    # board_build.f_flash: 40000000L

external_components:
    source: github://mapero/esphome-hcpbridge
    refresh: 0s

esp32:
  board: adafruit_feather_esp32s3
  framework:
    type: arduino

hcpbridge:
  is_connected:
    name: "HCPBridge Connected"
  rx_pin: 18 # optional, default=18
  tx_pin: 17 # optional, default=17

cover:
  - platform: hcpbridge
    name: Garage Door

light:
  - platform: binary
    output: output_light
    id: light_1
    name: Garage Door Light

output:
  - platform: template
    type: binary
    id: output_light
    write_action:
      lambda: !lambda |-
        id(garagedoor_cover).set_light_state(state);

#This sensor is needed to adjust the light state with the one from the motor.
binary_sensor:
  - platform: template
    internal: true 
    name: "Garage Door Light sensor"
    device_class: light
    id: sensor_light
    lambda: !lambda |-
      return (id(garagedoor_cover).get_light_state());
    on_state:
      if:
        condition:
          or:
            - and:
              - binary_sensor.is_on: sensor_light
              - light.is_off: light_1
            - and:
              - binary_sensor.is_off: sensor_light
              - light.is_on: light_1
        then:
          - light.toggle: light_1

button:
  platform: template
  name: "Garage Door Vent"
  on_press:
    - lambda: |-
        id(garagedoor_cover).on_go_to_vent();

text_sensor:
  - platform: hcpbridge
    name: "Garage Door State"

api:
  encryption:
    key: !secret api_key

web_server:
  port: 80
  auth:
    username: !secret web_username
    password: !secret web_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable logging
logger:
  level: DEBUG
  baud_rate: 9600

# Example configuration entry
ota:
  safe_mode: true

